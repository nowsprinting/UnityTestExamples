name: Test

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    types: [ opened, synchronize, reopened ]  # Same as default
    paths-ignore:
      - '**.md'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneLinux64
        unityVersion: # Available versions see: https://game.ci/docs/docker/versions
          - 2019.4.39f1
          - 2020.3.34f1
          - 2021.3.2f1
          - 2022.1.1f1

    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: false
          lfs: false

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      # Test
      - name: Create license secret key
        id: license
        run: echo "::set-output name=secret_key::UNITY_LICENSE_$(echo ${{ matrix.unityVersion }} | cut -c 1-4)"

      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: ${{ matrix.unityVersion }}  # 通常は未指定（`auto`）でok
          artifactsPath: Logs
          customParameters: -testCategory "!IgnoreCI" -burst-disable-compilation -debugCodeOptimization -enableCodeCoverage -coverageResultsPath Logs -coverageOptions 'generateAdditionalMetrics;generateHtmlReport;assemblyFilters:+<user>,+EmbeddedPackageSample*,+LocalPackageSample*,-*Tests'
          # see: https://docs.unity3d.com/Packages/com.unity.testtools.codecoverage@1.1/manual/CoverageBatchmode.html
          # HtmlReportは二度生成されるが、Edit + Play Modeを含んだものが上書きされて残るのでヨシ
        env:
          UNITY_LICENSE: ${{ secrets[steps.license.outputs.secret_key] }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults-Unity${{ matrix.unityVersion }}
          path: Logs
        if: always()

  notify:
    needs: test
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: Gamesight/slack-workflow-status@v1.1.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
